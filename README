
UDP шлюз для MCP3008 (любой порт, постоянное чтение)
Интерфейс SPI для взаимодействия с микросхемами организуется на любых GPIO портах
компьютера. Чтение с определенной микросхемы можно организовать с отдельного потока
выполнения. Есть возможность фильтрации, линейной коррекции, приведения к физической
величине.
ВНИМАНИЕ: НЕ ПРОВЕРЕНО НА ЖЕЛЕЗЕ.
1 Установка
1.1 Требования
Скрипт-установщик работает в командной оболочке bash.
1.2 Настройка перед установкой:
- место установки исполняемого файла: файл build.sh константа INST_DIR
- место установки файла конфигурации: файл build.sh константа CONF_DIR (должна соответствовать CONF_DIR из main.h)
- см. ./lib/gpio/README
1.3 Команды для установки:
cd gwu3008pc
Полная установка:
sudo ./build.sh full
Полная установка, не затрагивая конфигурационных файлов:
sudo ./build.sh full_nc
Для тестирования (файлы не копируются за пределы текущей папки):
sudo ./build.sh part_debug

2 Настройка после установки:
Общие настройки демон читает из файла CONF_MAIN_FILE (main.h),
 где
 port - порт (должен быть уникальным в рамках хоста);
Настройки для микросхем демон читает из файла CONF_DEVICE_FILE (main.h):
 где
 id - идентификатор микросхемы (целое число; задается произвольно; нельзя повторять);
 sclk - физический номер порта (serial clock);
 mosi - физический номер порта (serial data in);
 miso - физический номер порта (serial data out);
 cs - физический номер порта (chip select);
Настройки для каналов микрохем демон читает из файла CONF_CHANNEL_FILE (main.h):
 где
 id - сетевой идентификатор, по котором клиент будет читать измеренные микросхемой параметры (целое число; задается произвольно; нельзя повторять);
 device_id - идентификатор микросхемы (соответствует id из файла CONF_DEVICE_FILE);
 device_channel_id - идентификатор канала (целое число; 0 <= id <= 7; нельзя повторять для одного device_id);
 mode - режим работы канала (строка; возможные значения: se, df (т.е. single-ended, differentia));
 lcorrection_id - идентификатор набора параметров из файла настройки коррекции измерений (CONF_LCORRECTION_FILE);
 lreduction_id - идентификатор набора параметров из файла настройки приведения к физической величине (CONF_LREDUCTION_FILE);
Настройки для потоков демон читает из файла CONF_THREAD_FILE (main.h):
 где
 id - идентификатор потока (целое число; задается произвольно; нельзя повторять);
 cd_sec и cd_nsec - минимальная продолжительность цикла чтения со всех каналов потока;
Для привязки микросхем к потокам служит файл CONF_THREAD_DEVICE_FILE (main.h):
 где
 thread_id - идентификатор потока (соответствует id из файла CONF_THREAD_FILE);
 device_id - идентификатор микросхемы (соответствует id из файла CONF_DEVICE_FILE; нельзя повторять в файле и для одного потока);
Настройки для коррекции измерений демон читает из файла CONF_LCORRECTION_FILE (main.h):
 id - идентификатор набора параметров (целое число; задается произвольно; нельзя повторять);
 factor - коэффициент;
 delta - приращение.
Исходный код: ./lib/lcorrection.c 
Настройки для приведения измерений к физической величине демон читает из файла CONF_LREDUCTION_FILE (main.h):
 id - идентификатор набора параметров (целое число; задается произвольно; нельзя повторять);
 min_in - минимальное значение, читаемое с микросхемы;
 max_in - максимальное значение, читаемое с микросхемы;
 min_out - значение физической величины, соответствующее min_in;
 max_out - значение физической величины, соответствующее max_in;
прочитанные значения будут приведены к физической величине по линейному закону.
Исходный код: ./lib/lreduction.c
Параметры для фильтров скользящего среднего определяются в файле CONF_FILTER_MA_FILE (main.h):
 id - идентификатор набора параметров (целое число; задается произвольно; нельзя повторять);
 length - количество измерений, по которым будет вычисляться среднее (length >= 0);
Исходный код: ./lib/filter/ma.c 
Параметры для экспоненциальных фильтров определяются в файле CONF_FILTER_EXP_FILE (main.h):
 id - идентификатор набора параметров (целое число; задается произвольно; нельзя повторять);
 a - коэффициент (0 <= a <= 1);
Исходный код: ./lib/filter/exp.c
В файле CONF_CHANNEL_FILTER_FILE (main.h) находятся настройки для привязки фильтров к каналам:
 channel_id - идентификатор канала (соответствует id из файла CONF_CHANNEL_FILE);
 filter_id - идентификатор фильтра (соответствует id из файла CONF_FILTER_MA_FILE или файла CONF_FILTER_EXP_FILE);
Параметры для фильтра filter_id для определенного channel_id извлекаются (если они 
там есть) сначала из файла CONF_FILTER_MA_FILE, затем из файла CONF_FILTER_EXP_FILE.
На основе извлеченных параметров создается фильтр определенного типа и добавляется 
в массив фильтров, которые будут поочередно применяться каждый раз при чтении с
микросхемы (таким образом можно, например, создать экспоненциальный фильтр
второго или любого другого порядка).
3 Запуск
При полной установке запускается автоматически, вмести с операционной системой.
sudo gwu3008pc
В режиме отладки (не отключается от терминала и выдает сообщения):
sudo gwu3008_dbg
Если приложение установлено для тестирования:
sudo ./gwu3008pc_dbg

4 Управление
4.1 Список команд
см. ./util.c printHelp()

4.2 Графический интерфейс пользователя
для чтения результатов измерений:
https://github.com/arinichevN/monitor_cl 
для отправки общих для всех демонов команд:
https://github.com/arinichevN/app_cl

4.3 Примеры
Для рассылки udp пакетов используется утилита udpcl (https://github.com/arinichevN/udpcl)
Утилита netcat не подходит, так как разрывает пакеты, встречая символ '\n'
Параметры утилиты udpcl следует заменить на свои.
перезагрузка с чтением всех настроек:
udpcl ars '' 192.168.1.250 49162 2
запрос температуры для датчика №1 и №2:
udpcl gfts 1\n2\n 192.168.1.250 49162 2

